//zadanie 1



let predkosc k =
    let metry = k * 1000 / 3600
    metry

let k = 360
let wynik = predkosc k
printfn $"{wynik} m/s"


// zadanie 2


let macierz n =
    let lista = List.init (n)
    for i in lista do
        let i = List.init(n)
        Printfn"utworzono macierz"
    for i in lista do
        for j in lista do
            j |> List.map(fun x -> if (i + j % 2 = 0) then 0 else 1)
    lista
    

//zadanie 3


using System;
using System.Security.Cryptography.X509Certificates;

public class Animal
{
    public string Name { get; set; }
    public Animal(string name)
    {
        Name = name;
    }

    public virtual string MakeSound()
    {
        return $"{Name} Wydaje dzwiek: ";
    }
}
public class Lion : Animal
{
    public Lion(string name):base(name)
    {
        
    }
    public override string MakeSound()
    {
        return base.MakeSound() + "Roar!";
    }
}

public class Elephant : Animal
{
    public Elephant(string name):base(name)
    {
    }
    public override string MakeSound()
    {
        return base.MakeSound() + "Trumpet!";
    }
}

class Program
{
    public static void PrintAnimalSounds(List<Animal> animals)
    {
        foreach (Animal animal in animals)
        {
            
            Console.WriteLine(animal.MakeSound());
            
        }
    }

    public static void Main()
    {
        Lion lew = new Lion("Lew");
        Animal Pies = new Animal("Pies");
        Elephant Slon = new Elephant("Slon");
        List<Animal> animals = new List<Animal>();
        animals.Add(Pies);
        animals.Add(lew);
        animals.Add(Slon);
        PrintAnimalSounds(animals);
    }
}
